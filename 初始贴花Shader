            struct appdata
            {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD1;                
            };

            struct v2f
            {               
                float4 vertex : SV_POSITION;       
                float3 pos : TEXCOORD1;                             
            };

            sampler2D _MainTex;
            uniform float4x4 WorldToBoxArray[128];
            uniform float4 Boxinfo[128];
            uniform int DecalCount;
            
            float4 clipDecal(float4 decalCol,float2 uv,float depth)
            {
                decalCol = uv.x > 0 ? decalCol : 0;
                decalCol = uv.x < 1 ? decalCol : 0;
                decalCol = uv.y > 0 ? decalCol : 0;
                decalCol = uv.y < 1 ? decalCol : 0;
                decalCol = depth > 0 ? decalCol : 0;
                decalCol = depth < 1 ? decalCol : 0;
                return decalCol;
            }

            v2f Vert (appdata v)
            {
                v2f o;
                o.vertex = mul(UNITY_MATRIX_M,v.vertex);
                o.vertex = mul(UNITY_MATRIX_VP,o.vertex);
                o.pos = mul(UNITY_MATRIX_M,v.vertex);       
                o.pos = GetAbsolutePositionWS(o.pos); 
                return o;
            }

            void Frag(v2f i,out float4 outColor : SV_Target)                                               
            {
                float4 col;

                for(int count = 0; count < DecalCount;count++)
                {
                    float4x4 ProjectionMatrixArray = float4x4
                    (
                        2/Boxinfo[count].x, 0, 0, 0,
                        0, 2/Boxinfo[count].y, 0, 0,
                        0, 0, 2/Boxinfo[count].z, -1,
                        0, 0, 0, 1
                    );
                    float4x4 DecalVP = mul(ProjectionMatrixArray,WorldToBoxArray[count]);
                    float4 cameraClip = mul(DecalVP,float4(i.pos,1));
                    float depth = cameraClip.z*0.5+0.5;
                    float2 uv = cameraClip.xy*0.5+0.5;
                    float4 Tex = tex2D(_MainTex,uv);  
                    Tex = clipDecal (Tex,uv,depth);
                    col += Tex;
                }

                outColor = col;
            }  
