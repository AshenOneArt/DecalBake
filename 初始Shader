Pass
        {
            Name "DepthForwardOnly"
            Tags{ "LightMode" = "DepthForwardOnly" }

            HLSLPROGRAM

            #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
            #pragma multi_compile_instancing
            #pragma multi_compile _ DOTS_INSTANCING_ON
            #pragma multi_compile_fragment _ WRITE_MSAA_DEPTH
            #define SHADERPASS SHADERPASS_DEPTH_ONLY

            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Unlit/Unlit.hlsl"
	          #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Unlit/ShaderPass/UnlitDepthPass.hlsl"
	          #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Unlit/UnlitData.hlsl"
			
            struct appdata
            {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD1;                
            };

            struct v2f
            {               
                float4 vertex : SV_POSITION;                                
            };

            sampler2D _MainTex;

            v2f Vert (appdata v)
            {
                v2f o;
                o.vertex = mul(UNITY_MATRIX_M,v.vertex);
                o.vertex = mul(UNITY_MATRIX_VP,o.vertex);
                return o;
            }

            void Frag(v2f i,out float4 outColor : SV_Target)                                               
            {
                float4 col;  
                col = 1;    
                outColor = col;
            }  
            #pragma vertex Vert
            #pragma fragment Frag
            ENDHLSL
        }

        Pass
        {
            Name "ForwardOnly"
            Tags { "LightMode" = "ForwardOnly" }


            HLSLPROGRAM
            #pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch
            #pragma multi_compile_instancing
            #pragma multi_compile _ DOTS_INSTANCING_ON
            #pragma multi_compile _ DEBUG_DISPLAY
            #ifdef DEBUG_DISPLAY
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Debug/DebugDisplay.hlsl"
            #endif
            #define SHADERPASS SHADERPASS_FORWARD_UNLIT

            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Material.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Unlit/Unlit.hlsl"
            #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Unlit/ShaderPass/UnlitSharePass.hlsl"
	          #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Unlit/UnlitData.hlsl"
			
            struct appdata
            {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD1;                
            };

            struct v2f
            {               
                float4 vertex : SV_POSITION;                                
            };

            sampler2D _MainTex;

            v2f Vert (appdata v)
            {
                v2f o;
                o.vertex = mul(UNITY_MATRIX_M,v.vertex);
                o.vertex = mul(UNITY_MATRIX_VP,o.vertex);
                return o;
            }

            void Frag(v2f i,out float4 outColor : SV_Target)                                               
            {
                float4 col;  
                col = 1;    
                outColor = col;
            }        
            #pragma vertex Vert
            #pragma fragment Frag

            ENDHLSL
        }
